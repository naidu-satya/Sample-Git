package ProblemsOnBinarySearch;

public class InfiniteArray {
    public static void main(String[] args) {
    int[] arr = { 1, 2, 23, 45, 67, 78, 89, 100, 104, 198, 209, 305, 475};
    int target = 1;
        System.out.println(ans(arr, target));
    }

    static int ans(int[] arr, int target){
        //first find the range
        //first start with box size 2
        int start = 0;
        int end = 1;
        //condition for target to lie in the range
        while(target > arr[end]){
            int newS = end + 1; // this is my new start
            // end = previousEnd + (sizeOfBox * 2)
            end = end + (end - start + 1) * 2;
            start = newS;
        }
        return binarysearch(arr, target, start, end);
    }
    static int binarysearch(int[] arr, int target, int start, int end){
        while(start <= end){
            //find the middle element
            //int mid = (start + end) / 2    //might be possible that it may exceed the integer range
            int mid = start + (end - start) /2;
            if(target < arr[mid])
                end = mid -1;
            else if(target > arr[mid])
                start = mid + 1;
            else
                return mid;
        }
        return -1;
    }
}
